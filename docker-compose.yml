version: '3.1'
services:
  postgres:
    image: postgres:9.6.5
    volumes:
      - ./docker-mounts/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pricewars
      - POSTGRES_PASSWORD=1337
      - POSTGRES_DB=marketplace

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./docker-mounts/redis:/data

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - ./docker-mounts/zookeeper:/opt/zookeeper-3.4.9/data

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_LOG_DIRS=/kafka/kafka-logs
      - KAFKA_LOG_RETENTION_HOURS=-1
    volumes:
      - ./docker-mounts/kafka:/kafka/kafka-logs
    depends_on:
      - zookeeper

  kafka-reverse-proxy:
    build: ./kafka-reverse-proxy
    ports:
      - "8001:8001"
    environment:
      - KAFKA_URL=kafka:9092
    volumes:
      - ./docker-mounts/csv-export:/loggerapp/data
    depends_on:
      - kafka
    links:
      - kafka

  flink-jobmanager:
    image: melentye/flink:latest
    ports:
      - "8081:8081"
    expose:
      - "6123"
    environment:
      - KAFKA_URL=kafka:9092
    command: "bash '/analytics/start-jobmanager.sh'"
    volumes:
      - ./analytics:/analytics
    depends_on:
      - analytics
      - kafka
    links:
      - kafka

  flink-taskmanager:
    image: melentye/flink:latest
    expose:
      - "6121"
      - "6122"
    environment:
      - TASK_MANAGER_RPC_PORT=6122
      - TASK_MANAGER_DATA_PORT=6121
    depends_on:
      - flink-jobmanager
    links:
      - flink-jobmanager
    command: "bash '/analytics/start-taskmanager.sh'"
    volumes:
      - ./analytics:/analytics
    depends_on:
      - analytics

  analytics:
    # compiles flink jobs at image creation
    build: ./analytics
    volumes:
      - ./analytics:/analytics

  management-ui:
    build: ./mgmt-ui
    ports:
      - "80:80"
    depends_on:
      - kafka-reverse-proxy
      - marketplace
      - producer
      - consumer
      - merchant-cheapest

  marketplace:
    build: ./marketplace
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_USER=pricewars
      - POSTGRES_PASSWORD=1337
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=marketplace
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis
      - PRICEWARS_PRODUCER_URL=producer:3050
    volumes:
      - ./db-seeds:/db-seeds
    #   - ./pricewars-marketplace:/marketplace
    depends_on:
      - postgres
      - redis
      - kafka
      - producer
    links:
      - postgres
      - redis
      - kafka
      - producer

  producer:
    build: ./producer
    ports:
      - "3050:3050"
    environment:
      - KAFKA_URL=kafka:9092
    depends_on:
      - kafka
    volumes:
      - ./producer/controllers:/producer/controllers

  consumer:
    build: ./consumer
    ports:
       - "3000:3000"
    environment:
      - RAILS_ENV=development
      - PRICEWARS_MARKETPLACE_URL=marketplace:8080
      - PRICEWARS_PRODUCER_URL=producer:3050
    # volumes:
    #   - ./pricewars-consumer:/consumer
    command: "bash -c 'rm -rf /consumer/tmp/pids/server.pid; bundle exec rails s -b 0.0.0.0'"
    depends_on:
      - marketplace
    links:
      - marketplace

  merchant-cheapest:
    build: ./merchant
    ports:
      - "5003:5003"
    command: python3 merchant_cheapest.py --port 5003
    volumes:
      - ./merchant:/merchant
    depends_on:
      - producer
      - marketplace
    links:
      - producer
      - marketplace


networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.29.0.0/24
